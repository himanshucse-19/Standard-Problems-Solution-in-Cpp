#include<bits/stdc++.h>
using namespace std;


int dx[]={-1,0,1,0};
int dy[]={0,1,0,-1};
int dist[510][50000];
bool vis[510][50000];
char a[510][50000];
int n,m;

bool isvalid(int x,int y)
{
    if(x<0||x>=n||y<0||y>=m||a[x][y]=='#'||vis[x][y]==true)
    return false;
    return true;
}
void bfs(int a,int b)
{
    queue<pair<int,int>>q;
    dist[a][b]=0;
    vis[a][b]=true;
    q.push({a,b});
    while(!q.empty())
    {
        auto z=q.front();
        q.pop();
        int x=z.first;
        int y=z.second;
        for(int i=0;i<4;i++)
        {
            if(isvalid(x+dx[i],y+dy[i]))
            {
                q.push({x+dx[i],y+dy[i]});
                vis[x+dx[i]][y+dy[i]]=true;
                dist[x+dx[i]][y+dy[i]]=dist[x][y]+1;
            }
        }
    }
}
string reachTheEnd(vector<string>grid, int maxTime)
{
    for(int i=0;i<grid.size();i++)
    {
        for(int j=0;j<grid[0].size();j++)
        {
            a[i][j]=grid[i][j];
        }
    }
    for(int i=0;i<510;i++)
    {
        for(int j=0;j<50000;j++)
        {
            vis[i][j]=false;
            dist[i][j]=1e9;
        }
    }
    n=grid.size();
    m=grid[0].size();
    bfs(0,0);
    if(dist[n-1][m-1]<=maxTime)
    return "Yes";
    return "No";
}

int main(){
    vector<string> grid = {"..",".."};
    cout << reachTheEnd(grid, 3) << endl;
}
