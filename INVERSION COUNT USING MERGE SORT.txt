/* Author: 
          
          shankhdhar234himanshu@gmail.com
 
                                               */      
//COUNT INVERSION IN AN ARRAY          
#include<bits/stdc++.h>
#define code lli n,k;cin>>n>>k;lli a[n];loop0(i,n) cin>>a[i]
#define lli long long int
#define toh_shuru_karte_hai_bina_kise_bakchodi_ke ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr)
#define test lli t;cin>>t;while(t--)
#define arrin lli n;cin>>n;lli a[n];for(lli i=0;i<n;i++)cin>>a[i]       
//#define mod 1000000007
#define pb push_back
#define loop0(i,n) for(int i=0; i<n; i++)
#define loop1(i,n) for(int i=1; i<=n; i++)
#define rev0(i,n)  for(int i=n-1; i>=0; i--)
#define rev1(i,n)  for(int i=n; i>0; i--)
using namespace std;
lli count_inversion(lli a[],lli temp[],lli left,lli mid,lli right)
{
  lli i=left,j=mid+1;
  lli k=left;
  lli inversion_count=0;
  while(i<=mid&&j<=right)
  {
    if(a[i]<a[j])
    {
      temp[k++]=a[i++];
    }
    else
    {
      temp[k++]=a[j++];
      inversion_count+=mid-i+1;
    }
  }
  while(i<=mid)
  temp[k++]=a[i++];
  while(j<=right)
  temp[k++]=a[j++];
  for(int i=left;i<=right;i++)
  a[i]=temp[i];
  return inversion_count;
}
void merge_sort(lli a[],lli temp[],lli left,lli right,lli &inversion_count)
{
  if(right>left)
  {
    lli mid=(left+right)/2;
    merge_sort(a,temp,left,mid, inversion_count);
    merge_sort(a,temp,mid+1,right, inversion_count);
    inversion_count+=count_inversion(a,temp,left,mid,right);
  }
}
int main()
{
 toh_shuru_karte_hai_bina_kise_bakchodi_ke;
//freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);
  arrin;
  lli temp[n]={0};
  lli inversion_count=0;
  merge_sort(a,temp,0,n-1, inversion_count);
  cout<<inversion_count<<endl;
  
}